@model Scheduler.ViewModel.OrderPartViewModel

@{
    ViewBag.Title = "editOrder";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>editOrder</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.order.orderId)

        <div class="form-group">
            @Html.LabelFor(x => Model.order.partId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.order.partId, new SelectList(Model.parts, "partId", "partName"), htmlAttributes: new { @name = "partId", @class = "form-control" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.order.projectName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.order.projectName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.order.projectName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.order.lastMaterialDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.order.lastMaterialDate, new { htmlAttributes = new { @class = "form-control datetimepicker" } })
                @Html.ValidationMessageFor(model => model.order.lastMaterialDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.order.shipDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.order.shipDate, new { htmlAttributes = new { @class = "form-control datetimepicker" } })
                @Html.ValidationMessageFor(model => model.order.shipDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.order.quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.order.quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.order.quantity, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(x => Model.order.status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    List<SelectListItem> listItems = new List<SelectListItem>();
                    listItems.Add(new SelectListItem
                    {
                        Text = "unscheduled",
                        Value = "unscheduled"
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "scheduled",
                        Value = "scheduled",
                        Selected = true
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "processing",
                        Value = "processing"
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "completed",
                        Value = "completed"
                    });
                }

                @Html.DropDownListFor(model => model.order.status, new SelectList(listItems, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(x => Model.order.priority, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    List<SelectListItem> listItemsPriority = new List<SelectListItem>();
                    listItemsPriority.Add(new SelectListItem
                    {
                        Text = "High",
                        Value = "1"
                    });
                    listItemsPriority.Add(new SelectListItem
                    {
                        Text = "Moderate",
                        Value = "2",
                        Selected = true
                    });
                    listItemsPriority.Add(new SelectListItem
                    {
                        Text = "Normal",
                        Value = "3"
                    });

                }

                @Html.DropDownListFor(model => model.order.priority, new SelectList(listItemsPriority, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script type="text/javascript">

    $(function () {


        $('.datetimepicker').datetimepicker({

            format: 'DD/MM/YYYY HH:mm',


        });
    });

</script>
